// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*ggml_vec_dot_t)(int n,float* s,unsigned long bs,void* x,unsigned long bx,void* y,unsigned long by,int nrc);
 * }
 */
public interface ggml_vec_dot_t {

    void apply(int n, MemorySegment s, long bs, MemorySegment x, long bx, MemorySegment y, long by, int nrc);
    static MemorySegment allocate(ggml_vec_dot_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$135.const$1, fi, constants$135.const$0, scope);
    }
    static ggml_vec_dot_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _n, MemorySegment _s, long _bs, MemorySegment _x, long _bx, MemorySegment _y, long _by, int _nrc) -> {
            try {
                constants$135.const$2.invokeExact(symbol, _n, _s, _bs, _x, _bx, _y, _by, _nrc);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


