// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * _Bool (*ggml_backend_eval_callback)(int node_index,struct ggml_tensor* t1,struct ggml_tensor* t2,void* user_data);
 * }
 */
public interface ggml_backend_eval_callback {

    boolean apply(int node_index, MemorySegment t1, MemorySegment t2, MemorySegment user_data);
    static MemorySegment allocate(ggml_backend_eval_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$123.const$0, fi, constants$122.const$5, scope);
    }
    static ggml_backend_eval_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _node_index, MemorySegment _t1, MemorySegment _t2, MemorySegment _user_data) -> {
            try {
                return (boolean)constants$123.const$1.invokeExact(symbol, _node_index, _t1, _t2, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


