// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*ggml_custom2_op_f32_t)(struct ggml_tensor*,struct ggml_tensor*,struct ggml_tensor*);
 * }
 */
public interface ggml_custom2_op_f32_t {

    void apply(MemorySegment backend, MemorySegment abort_callback, MemorySegment abort_callback_data);
    static MemorySegment allocate(ggml_custom2_op_f32_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$81.const$2, fi, constants$81.const$1, scope);
    }
    static ggml_custom2_op_f32_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (MemorySegment _backend, MemorySegment _abort_callback, MemorySegment _abort_callback_data) -> {
            try {
                constants$81.const$3.invokeExact(symbol, _backend, _abort_callback, _abort_callback_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


