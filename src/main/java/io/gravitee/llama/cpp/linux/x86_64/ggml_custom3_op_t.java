// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*ggml_custom3_op_t)(struct ggml_tensor* dst,struct ggml_tensor* a,struct ggml_tensor* b,struct ggml_tensor* c,int ith,int nth,void* userdata);
 * }
 */
public interface ggml_custom3_op_t {

    void apply(MemorySegment dst, MemorySegment a, MemorySegment b, MemorySegment c, int ith, int nth, MemorySegment userdata);
    static MemorySegment allocate(ggml_custom3_op_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$85.const$1, fi, constants$85.const$0, scope);
    }
    static ggml_custom3_op_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (MemorySegment _dst, MemorySegment _a, MemorySegment _b, MemorySegment _c, int _ith, int _nth, MemorySegment _userdata) -> {
            try {
                constants$85.const$2.invokeExact(symbol, _dst, _a, _b, _c, _ith, _nth, _userdata);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


