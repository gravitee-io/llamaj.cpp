// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * _Bool (*ggml_abort_callback)(void* data);
 * }
 */
public interface ggml_abort_callback {

    boolean apply(java.lang.foreign.MemorySegment data);
    static MemorySegment allocate(ggml_abort_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$30.const$1, fi, constants$30.const$0, scope);
    }
    static ggml_abort_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _data) -> {
            try {
                return (boolean)constants$30.const$2.invokeExact(symbol, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


