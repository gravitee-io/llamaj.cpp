// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$173 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$173() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.of(MemoryLayout.structLayout(
        JAVA_INT.withName("n_tokens"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("token"),
        RuntimeHelper.POINTER.withName("embd"),
        RuntimeHelper.POINTER.withName("pos"),
        RuntimeHelper.POINTER.withName("n_seq_id"),
        RuntimeHelper.POINTER.withName("seq_id"),
        RuntimeHelper.POINTER.withName("logits")
    ).withName("llama_batch"),
        JAVA_INT,
        JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "llama_batch_init",
        constants$173.const$0
    );
    static final FunctionDescriptor const$2 = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            JAVA_INT.withName("n_tokens"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("token"),
            RuntimeHelper.POINTER.withName("embd"),
            RuntimeHelper.POINTER.withName("pos"),
            RuntimeHelper.POINTER.withName("n_seq_id"),
            RuntimeHelper.POINTER.withName("seq_id"),
            RuntimeHelper.POINTER.withName("logits")
        ).withName("llama_batch")
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "llama_batch_free",
        constants$173.const$2
    );
    static final FunctionDescriptor const$4 = FunctionDescriptor.of(JAVA_INT,
        RuntimeHelper.POINTER,
        MemoryLayout.structLayout(
            JAVA_INT.withName("n_tokens"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("token"),
            RuntimeHelper.POINTER.withName("embd"),
            RuntimeHelper.POINTER.withName("pos"),
            RuntimeHelper.POINTER.withName("n_seq_id"),
            RuntimeHelper.POINTER.withName("seq_id"),
            RuntimeHelper.POINTER.withName("logits")
        ).withName("llama_batch")
    );
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "llama_encode",
        constants$173.const$4
    );
}


