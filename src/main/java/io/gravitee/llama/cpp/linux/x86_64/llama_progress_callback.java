// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * _Bool (*llama_progress_callback)(float progress,void* user_data);
 * }
 */
public interface llama_progress_callback {

    boolean apply(float progress, MemorySegment user_data);
    static MemorySegment allocate(llama_progress_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$139.const$2, fi, constants$139.const$1, scope);
    }
    static llama_progress_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (float _progress, MemorySegment _user_data) -> {
            try {
                return (boolean)constants$139.const$3.invokeExact(symbol, _progress, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


