// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*ggml_log_callback)(enum ggml_log_level level,char* text,void* user_data);
 * }
 */
public interface ggml_log_callback {

    void apply(int level, MemorySegment text, MemorySegment user_data);
    static MemorySegment allocate(ggml_log_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$91.const$5, fi, constants$79.const$5, scope);
    }
    static ggml_log_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _level, MemorySegment _text, MemorySegment _user_data) -> {
            try {
                constants$80.const$1.invokeExact(symbol, _level, _text, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


