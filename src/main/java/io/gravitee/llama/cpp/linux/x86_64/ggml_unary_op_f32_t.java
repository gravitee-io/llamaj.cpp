// Generated by jextract

package io.gravitee.llama.cpp.linux.x86_64;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*ggml_unary_op_f32_t)(int,float*,float*);
 * }
 */
public interface ggml_unary_op_f32_t {

    void apply(int _x0, MemorySegment _x1, MemorySegment _x2);
    static MemorySegment allocate(ggml_unary_op_f32_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$80.const$0, fi, constants$79.const$5, scope);
    }
    static ggml_unary_op_f32_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int __x0, MemorySegment __x1, MemorySegment __x2) -> {
            try {
                constants$80.const$1.invokeExact(symbol, __x0, __x1, __x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


