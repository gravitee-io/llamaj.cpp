// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * void (*ggml_map_custom2$fun)(struct ggml_tensor*,struct ggml_tensor*,struct ggml_tensor*,int,int,void*);
 * }
 */
public interface ggml_map_custom2$fun {

    void apply(MemorySegment dst, MemorySegment a, MemorySegment b, int ith, int nth, MemorySegment userdata);
    static MemorySegment allocate(ggml_map_custom2$fun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$89.const$5, fi, constants$88.const$0, scope);
    }
    static ggml_map_custom2$fun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (MemorySegment _dst, MemorySegment _a, MemorySegment _b, int _ith, int _nth, MemorySegment _userdata) -> {
            try {
                constants$88.const$2.invokeExact(symbol, _dst, _a, _b, _ith, _nth, _userdata);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


