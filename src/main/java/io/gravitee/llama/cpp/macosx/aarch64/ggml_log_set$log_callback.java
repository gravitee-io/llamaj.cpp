// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * void (*ggml_log_set$log_callback)(enum ggml_log_level,char*,void*);
 * }
 */
public interface ggml_log_set$log_callback {

    void apply(int level, java.lang.foreign.MemorySegment text, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(ggml_log_set$log_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$97.const$5, fi, constants$83.const$0, scope);
    }
    static ggml_log_set$log_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _level, java.lang.foreign.MemorySegment _text, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                constants$83.const$2.invokeExact(symbol, _level, _text, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


