// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * struct llama_perf_context_data {
 *     double t_start_ms;
 *     double t_load_ms;
 *     double t_p_eval_ms;
 *     double t_eval_ms;
 *     int n_p_eval;
 *     int n_eval;
 * };
 * }
 */
public class llama_perf_context_data {

    public static MemoryLayout $LAYOUT() {
        return constants$206.const$4;
    }
    public static VarHandle t_start_ms$VH() {
        return constants$206.const$5;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * double t_start_ms;
     * }
     */
    public static double t_start_ms$get(MemorySegment seg) {
        return (double)constants$206.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * double t_start_ms;
     * }
     */
    public static void t_start_ms$set(MemorySegment seg, double x) {
        constants$206.const$5.set(seg, x);
    }
    public static double t_start_ms$get(MemorySegment seg, long index) {
        return (double)constants$206.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void t_start_ms$set(MemorySegment seg, long index, double x) {
        constants$206.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle t_load_ms$VH() {
        return constants$207.const$0;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * double t_load_ms;
     * }
     */
    public static double t_load_ms$get(MemorySegment seg) {
        return (double)constants$207.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * double t_load_ms;
     * }
     */
    public static void t_load_ms$set(MemorySegment seg, double x) {
        constants$207.const$0.set(seg, x);
    }
    public static double t_load_ms$get(MemorySegment seg, long index) {
        return (double)constants$207.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void t_load_ms$set(MemorySegment seg, long index, double x) {
        constants$207.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle t_p_eval_ms$VH() {
        return constants$207.const$1;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * double t_p_eval_ms;
     * }
     */
    public static double t_p_eval_ms$get(MemorySegment seg) {
        return (double)constants$207.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * double t_p_eval_ms;
     * }
     */
    public static void t_p_eval_ms$set(MemorySegment seg, double x) {
        constants$207.const$1.set(seg, x);
    }
    public static double t_p_eval_ms$get(MemorySegment seg, long index) {
        return (double)constants$207.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void t_p_eval_ms$set(MemorySegment seg, long index, double x) {
        constants$207.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle t_eval_ms$VH() {
        return constants$207.const$2;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * double t_eval_ms;
     * }
     */
    public static double t_eval_ms$get(MemorySegment seg) {
        return (double)constants$207.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * double t_eval_ms;
     * }
     */
    public static void t_eval_ms$set(MemorySegment seg, double x) {
        constants$207.const$2.set(seg, x);
    }
    public static double t_eval_ms$get(MemorySegment seg, long index) {
        return (double)constants$207.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void t_eval_ms$set(MemorySegment seg, long index, double x) {
        constants$207.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n_p_eval$VH() {
        return constants$207.const$3;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * int n_p_eval;
     * }
     */
    public static int n_p_eval$get(MemorySegment seg) {
        return (int)constants$207.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * int n_p_eval;
     * }
     */
    public static void n_p_eval$set(MemorySegment seg, int x) {
        constants$207.const$3.set(seg, x);
    }
    public static int n_p_eval$get(MemorySegment seg, long index) {
        return (int)constants$207.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void n_p_eval$set(MemorySegment seg, long index, int x) {
        constants$207.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n_eval$VH() {
        return constants$207.const$4;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * int n_eval;
     * }
     */
    public static int n_eval$get(MemorySegment seg) {
        return (int)constants$207.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * int n_eval;
     * }
     */
    public static void n_eval$set(MemorySegment seg, int x) {
        constants$207.const$4.set(seg, x);
    }
    public static int n_eval$get(MemorySegment seg, long index) {
        return (int)constants$207.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void n_eval$set(MemorySegment seg, long index, int x) {
        constants$207.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


