// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * void (*ggml_map_custom2_inplace_f32$fun)(struct ggml_tensor*,struct ggml_tensor*,struct ggml_tensor*);
 * }
 */
public interface ggml_map_custom2_inplace_f32$fun {

    void apply(MemorySegment backend, MemorySegment abort_callback, MemorySegment abort_callback_data);
    static MemorySegment allocate(ggml_map_custom2_inplace_f32$fun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$86.const$3, fi, constants$83.const$1, scope);
    }
    static ggml_map_custom2_inplace_f32$fun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (MemorySegment _backend, MemorySegment _abort_callback, MemorySegment _abort_callback_data) -> {
            try {
                constants$83.const$3.invokeExact(symbol, _backend, _abort_callback, _abort_callback_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


