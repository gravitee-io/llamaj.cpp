// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$155 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$155() {}
    static final VarHandle const$0 = constants$150.const$1.varHandle(PathElement.groupElement("abort_callback"));
    static final VarHandle const$1 = constants$150.const$1.varHandle(PathElement.groupElement("abort_callback_data"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("nthread"),
        JAVA_INT.withName("ftype"),
        JAVA_INT.withName("output_tensor_type"),
        JAVA_INT.withName("token_embedding_type"),
        JAVA_BOOLEAN.withName("allow_requantize"),
        JAVA_BOOLEAN.withName("quantize_output_tensor"),
        JAVA_BOOLEAN.withName("only_copy"),
        JAVA_BOOLEAN.withName("pure"),
        JAVA_BOOLEAN.withName("keep_split"),
        MemoryLayout.paddingLayout(3),
        RuntimeHelper.POINTER.withName("imatrix"),
        RuntimeHelper.POINTER.withName("kv_overrides")
    ).withName("llama_model_quantize_params");
    static final VarHandle const$3 = constants$155.const$2.varHandle(PathElement.groupElement("nthread"));
    static final VarHandle const$4 = constants$155.const$2.varHandle(PathElement.groupElement("ftype"));
    static final VarHandle const$5 = constants$155.const$2.varHandle(PathElement.groupElement("output_tensor_type"));
}


