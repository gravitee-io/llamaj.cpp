// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * void (*ggml_to_float_t)(void* x,float* y,long long k);
 * }
 */
public interface ggml_to_float_t {

    void apply(java.lang.foreign.MemorySegment x, java.lang.foreign.MemorySegment y, long k);
    static MemorySegment allocate(ggml_to_float_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$99.const$2, fi, constants$31.const$4, scope);
    }
    static ggml_to_float_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _x, java.lang.foreign.MemorySegment _y, long _k) -> {
            try {
                constants$99.const$3.invokeExact(symbol, _x, _y, _k);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


