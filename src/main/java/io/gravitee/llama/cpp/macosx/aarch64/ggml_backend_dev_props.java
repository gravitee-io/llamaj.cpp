// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * struct ggml_backend_dev_props {
 *     char* name;
 *     char* description;
 *     unsigned long memory_free;
 *     unsigned long memory_total;
 *     enum ggml_backend_dev_type type;
 *     struct ggml_backend_dev_caps caps;
 * };
 * }
 */
public class ggml_backend_dev_props {

    public static MemoryLayout $LAYOUT() {
        return constants$116.const$2;
    }
    public static VarHandle name$VH() {
        return constants$116.const$3;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * char* name;
     * }
     */
    public static MemorySegment name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$116.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * char* name;
     * }
     */
    public static void name$set(MemorySegment seg, MemorySegment x) {
        constants$116.const$3.set(seg, x);
    }
    public static MemorySegment name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$116.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$116.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle description$VH() {
        return constants$116.const$4;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * char* description;
     * }
     */
    public static MemorySegment description$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$116.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * char* description;
     * }
     */
    public static void description$set(MemorySegment seg, MemorySegment x) {
        constants$116.const$4.set(seg, x);
    }
    public static MemorySegment description$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$116.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void description$set(MemorySegment seg, long index, MemorySegment x) {
        constants$116.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle memory_free$VH() {
        return constants$116.const$5;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * unsigned long memory_free;
     * }
     */
    public static long memory_free$get(MemorySegment seg) {
        return (long)constants$116.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * unsigned long memory_free;
     * }
     */
    public static void memory_free$set(MemorySegment seg, long x) {
        constants$116.const$5.set(seg, x);
    }
    public static long memory_free$get(MemorySegment seg, long index) {
        return (long)constants$116.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void memory_free$set(MemorySegment seg, long index, long x) {
        constants$116.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle memory_total$VH() {
        return constants$117.const$0;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * unsigned long memory_total;
     * }
     */
    public static long memory_total$get(MemorySegment seg) {
        return (long)constants$117.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * unsigned long memory_total;
     * }
     */
    public static void memory_total$set(MemorySegment seg, long x) {
        constants$117.const$0.set(seg, x);
    }
    public static long memory_total$get(MemorySegment seg, long index) {
        return (long)constants$117.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void memory_total$set(MemorySegment seg, long index, long x) {
        constants$117.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle type$VH() {
        return constants$117.const$1;
    }
    /**
     * Getter for field:
     * {@snippet lang=c :
     * enum ggml_backend_dev_type type;
     * }
     */
    public static int type$get(MemorySegment seg) {
        return (int)constants$117.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet lang=c :
     * enum ggml_backend_dev_type type;
     * }
     */
    public static void type$set(MemorySegment seg, int x) {
        constants$117.const$1.set(seg, x);
    }
    public static int type$get(MemorySegment seg, long index) {
        return (int)constants$117.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, int x) {
        constants$117.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment caps$slice(MemorySegment seg) {
        return seg.asSlice(36, 4);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


