// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * void (*llama_log_set$log_callback)(enum ggml_log_level,char*,void*);
 * }
 */
public interface llama_log_set$log_callback {

    void apply(int level, MemorySegment text, MemorySegment user_data);
    static MemorySegment allocate(llama_log_set$log_callback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$200.const$2, fi, constants$81.const$5, scope);
    }
    static llama_log_set$log_callback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _level, MemorySegment _text, MemorySegment _user_data) -> {
            try {
                constants$82.const$1.invokeExact(symbol, _level, _text, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


