// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * int (*funopen$x3)(void*);
 * }
 */
public interface funopen$x3 {

    int apply(MemorySegment _x0);
    static MemorySegment allocate(funopen$x3 fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$28.const$3, fi, constants$5.const$4, scope);
    }
    static funopen$x3 ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (MemorySegment __x0) -> {
            try {
                return (int)constants$8.const$0.invokeExact(symbol, __x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


