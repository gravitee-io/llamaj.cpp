// Generated by jextract

package io.gravitee.llama.cpp.macosx.aarch64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet lang=c :
 * struct ggml_backend_buffer_type* (*ggml_backend_split_buffer_type_t)(int main_device,float* tensor_split);
 * }
 */
public interface ggml_backend_split_buffer_type_t {

    java.lang.foreign.MemorySegment apply(int main_device, java.lang.foreign.MemorySegment tensor_split);
    static MemorySegment allocate(ggml_backend_split_buffer_type_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$120.const$1, fi, constants$20.const$1, scope);
    }
    static ggml_backend_split_buffer_type_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _main_device, java.lang.foreign.MemorySegment _tensor_split) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$120.const$2.invokeExact(symbol, _main_device, _tensor_split);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


